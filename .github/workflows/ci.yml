# Copyright 2025 Torsten Knodt
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http: //www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: C++ CI

on:
  push:
    # branches: Disabled Because of #25
    # - "*" Disabled Because of #25
    tags:
      - "*"
  pull_request:
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id}}
  cancel-in-progress: true

permissions:
  actions: read
  checks: write
  contents: read
  id-token: write
  packages: write
  pages: write
  security-events: write

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up apt cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: |
            /var/lib/apt/lists
            /var/lib/apt/swcatalog
            /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/ci.yml') }}

      - name: Cache APT Packages
        uses: torsknod2/cache-apt-pkgs-action@FallBack2InstallAndCachePkgIfRestorePkgFails
        with:
          packages: clang-18-doc clang-18-examples clang-format-18 clang-tidy-18 clangd-18 cpp-14-doc dia dia-shapes doxygen doxygen-doc doxygen-gui doxygen-latex fonts-freefont-ttf fonts-freefont-otf fonts-texgyre fonts-urw-base35 g++-14 gcc-14-doc gcc-14-locales gcc-14-multilib gcc-14-offload-amdgcn gcc-14-offload-nvptx gcovr graphviz graphviz-doc gsfonts lcov llvm-18-doc llvm-18-examples llvm-18-tools mmv mscgen nsight-compute nsight-systems nvidia-cuda-gdb nvidia-cuda-toolkit nvidia-cuda-toolkit-doc nvidia-profiler wasi-libc
          execute_install_scripts: true

      # - uses: liskin/gh-pipx@5935386cbd370a0ccc1be7aacc4bfc314edd23bc
      #   with:
      #     packages: gcovr

      - name: get-cmake
        uses: lukka/get-cmake@acb35cf920333f4dc3fc4f424f1b30d5e7d561b4
        with:
          cmakeVersion: latest
          ninjaVersion: latest
          useCloudCache: true
          useLocalCache: true

      - name: Initialize CodeQL
        uses: github/codeql-action/init@48ab28a6f5dbc2a99bf1e0131198dd8f1df78169
        if: success() || failure()
        with:
          languages: c-cpp # TODO Get (experimenta-l)actions working
          build-mode: manual
          queries: security-extended,security-and-quality

      #      - name: run-cmake
      #        uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER:FILEPATH=/usr/bin/x86_64-linux-gnu-gcc-14 -DCMAKE_CXX_COMPILER:FILEPATH=/usr/bin/x86_64-linux-gnu-g++-14

      - name: Build
        run: cmake --build build --verbose --parallel

      - name: Run Tests
        working-directory: build
        run: ctest --output-on-failure --output-log ctest.log.txt --output-junit ctest.junit.xml -j -R MDSpanTest

      - name: Move Test Results to Target Location
        if: success() || failure()
        working-directory: build
        run: |
          find GTestOutputDir -type d -exec mmv -r "{}/*.xml" "#1.junit.xml" \;
          mv ctest.log.txt ctest.junit.xml GTestOutputDir

      - name: Check Test Coverage
        uses: torsknod2/gcovr-action@main
        if: success() || failure()
        with:
          force_install: true
          root: ..
          gcov-executable: /usr/bin/x86_64-linux-gnu-gcov-14
          working-directory: build
          filter: _deps
          fail-under-line: 100
          fail-under-branch: 100
          fail-under-decision: 100
          fail-under-function: 100
          decisions: true
          calls: true
          j: true
          #cobertura: GTestOutputDir/coverage.cobertura.xml
          html-out: GTestOutputDir/coverage.html
          html-details: true
          #jacoco: GTestOutputDir/coverage.jacoco.xml
          #json: GTestOutputDir/coverage.json
          #json-pretty: true
          #json-summary: GTestOutputDir/coverage.summary.json
          #json-summary-pretty: true
          #lcov: GTestOutputDir/coverage.lcov
          #sonarqube: GTestOutputDir/coverage.sonarqube
          #txt: GTestOutputDir/coverage.txt
          print-summary: true

      - name: Generate Coverage Reports
        if: success() || failure()
        working-directory: build
        run: |
          gcovr -r .. --decisions --calls \
            --cobertura GTestOutputDir/coverage.cobertura.xml \
            --html-details GTestOutputDir/coverage.html \
            --jacoco GTestOutputDir/coverage.jacoco.xml \
            --json GTestOutputDir/coverage.json --json-pretty \
            --json-summary GTestOutputDir/coverage.summary.json --json-summary-pretty \
            --lcov GTestOutputDir/coverage.lcov \
            --sonarqube GTestOutputDir/coverage.sonarqube \
            --txt GTestOutputDir/coverage.txt \
            --print-summary \
            --filter _deps \
            -j \
            --gcov-executable /usr/bin/x86_64-linux-gnu-gcov-14
      # TODO Add test step for benchmark using RelWithDebInfo once implemented: ./BenchmarkMain
      - name: Perform CodeQL Analysis
        if: success() || failure()
        uses: github/codeql-action/analyze@48ab28a6f5dbc2a99bf1e0131198dd8f1df78169
        continue-on-error: true
        with:
          category: "/language:c-cpp"

      - name: Convert JUnit to HTML
        uses: mikepenz/action-junit-report@150e2f992e4fad1379da2056d1d1c279f520e058
        if: success() || failure()
        with:
          report_paths: build/GTestOutputDir/**/*.junit.xml
          fail_on_failure: true
          include_passed: true

      - name: Test Report
        uses: dorny/test-reporter@31a54ee7ebcacc03a09ea97a7e5465a47b84aea5
        if: success() || failure()
        with:
          name: Test Results
          working-directory: build
          path: GTestOutputDir/**/*.junit.xml
          reporter: java-junit

      - name: Upload reports/ results
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b
        if: success() || failure()
        with:
          name: all
          path: build/GTestOutputDir

      # - name: Upload GitHub Pages Artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: build/GTestOutputDir

      # - name: Deploy to GitHub Pages
      #   if: github.ref == 'refs/heads/main'
      #   uses: actions/deploy-pages@v4
