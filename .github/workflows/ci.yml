# Copyright 2025 Torsten Knodt
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http: //www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: C++ CI

on:
  push:
#    branches: Disabled Because of #25
#      - '*' Disabled Because of #25
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id}}
  cancel-in-progress: true

permissions:
  actions: read
  checks: write
  contents: read
  id-token: write
  packages: write
  pages: write
  security-events: write

jobs:
  build:
    strategy:
      matrix:
        CMAKE_C_COMPILER:
        - x86_64-linux-gnu-gcc-14
        - clang-cl-18
        include:
          - CMAKE_C_COMPILER: x86_64-linux-gnu-gcc-14
            CMAKE_CXX_COMPILER: x86_64-linux-gnu-g++-14
            GCOV_EXECUTABLE: x86_64-linux-gnu-gcov-14
            CMAKE_CXX_COMPILER_OFFLOAD:
              - default
              - disable
          - CMAKE_C_COMPILER: clang-cl-18
            CMAKE_CXX_COMPILER: clang-cl-18
    runs-on:
      - self-hosted
      - ubuntu-24.04
    steps:
      - name: Temporarily move /var/lib/docker/ to GitHub workspace until mounted.
        if: runner.name != 'tmk-wkst-4'
        run: sudo mv /var/lib/docker/ "${GITHUB_WORKSPACE}/docker"

      - name: Maximize build disk space
        if: runner.name != 'tmk-wkst-4'
        # This has to be before the checkout, because else the checked out code will be deleted by this action.
        uses: easimon/maximize-build-space@fc881a613ad2a34aca9c9624518214ebc21dfc0c
        with:
          build-mount-path: '/var/lib/docker/'
          remove-android: true
          remove-dotnet: true
          remove-haskell: true
          swap-size-mb: 4

      - name: Restore /var/lib/docker/
        if: runner.name != 'tmk-wkst-4'
        run: sudo sh -c "mv ${GITHUB_WORKSPACE}/docker/* /var/lib/docker"

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up QEMU
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5
        with:
          driver: docker-container

      # - name: Create Buildx builder
      #   run: |
      #     docker buildx rm -f mybuilder || true
      #     docker buildx create --name mybuilder --driver docker-container --use

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Determine Docker image tag
        id: image_tag
        run: |
          DEVCONTAINER_TAG=$(git describe --tags --always $(git log --oneline -n1 .devcontainer | cut -f1 -d" "))
          if [ $? -ne 0 ]; then
            echo "Failed to determine the tag. Skipping image push."
            exit 1
          fi
          echo "devcontainer_tag=${DEVCONTAINER_TAG}" >> $GITHUB_ENV

      # - name: Build and push Docker image
      #   if: success()
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .devcontainer
      #     builder: mybuilder
      #     push: true
      #     tags: |
      #       ghcr.io/torsknod2/mdspantest-devcontainer:${{ env.devcontainer_tag }}
      #       ${{ github.ref == 'refs/heads/main' && 'ghcr.io/torsknod2/mdspantest-devcontainer:latest' || '' }}
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@48ab28a6f5dbc2a99bf1e0131198dd8f1df78169
        with:
          languages: c-cpp
          build-mode: manual
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          queries: security-extended,security-and-quality

      - name: Run devcontainer
        uses: devcontainers/ci@a56d055efecd725e8cfe370543b6071b79989cc8
        with:
          imageName: ghcr.io/torsknod2/mdspantest-devcontainer
          imageTag: ${{ env.devcontainer_tag }}${{ github.ref == 'refs/heads/main' && ',latest' || '' }}
          cacheFrom: |
            type=local,src=/tmp/.buildx-cache
            type=registry,ref=ghcr.io/torsknod2/mdspantest-devcontainer
          runCmd: |
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER:FILEPATH=/usr/bin/${{matrix.CMAKE_C_COMPILER}} -DCMAKE_CXX_COMPILER:FILEPATH=${{matrix.CMAKE_CXX_COMPILER}} ${{ matrix.CMAKE_CXX_COMPILER_OFFLOAD && format('-DCMAKE_CXX_COMPILER_OFFLOAD:STRING={0}', matrix.CMAKE_CXX_COMPILER_OFFLOAD) || '' }}
            cmake --build build --verbose --parallel
            cd build
            ctest --output-on-failure --output-log ctest.log.txt --output-junit ctest.junit.xml -j -R MDSpanTest
            find GTestOutputDir -type d -exec mmv -r "{}/*.xml" "#1.junit.xml" \;
            mv ctest.log.txt ctest.junit.xml GTestOutputDir
            ${{matrix.GCOV_EXECUTABLE && format('gcovr -r .. --decisions --calls --cobertura GTestOutputDir/coverage.cobertura.xml --html-details GTestOutputDir/coverage.html --jacoco GTestOutputDir/coverage.jacoco.xml --json GTestOutputDir/coverage.json --json-pretty --json-summary GTestOutputDir/coverage.summary.json --json-summary-pretty --lcov GTestOutputDir/coverage.lcov --sonarqube GTestOutputDir/coverage.sonarqube --txt GTestOutputDir/coverage.txt --print-summary --fail-under-line 100 --fail-under-branch 100 --fail-under-decision 100 --fail-under-function 100 -j --gcov-executable /usr/bin/[0]', matrix.GCOV_EXECUTABLE) || 'true'}}
# TODO Add test step for benchmark using RelWithDebInfo once implemented: ./BenchmarkMain

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@48ab28a6f5dbc2a99bf1e0131198dd8f1df78169
        continue-on-error: true
        with:
          category: "/language:c-cpp"
      - name: Convert JUnit to HTML
        uses: mikepenz/action-junit-report@150e2f992e4fad1379da2056d1d1c279f520e058
        if: success() || failure()
        with:
          report_paths: build/GTestOutputDir/**/*.junit.xml
          fail_on_failure: true
          include_passed: true

      - name: Upload reports/ results
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b
        if: success() || failure()
        with:
          name: ${{ matrix.CMAKE_C_COMPILER }}-${{ matrix.CMAKE_CXX_COMPILER }}-${{ matrix.GCOV_EXECUTABLE || 'nocov' }}-${{ matrix.CMAKE_CXX_COMPILER_OFFLOAD || 'nooffload' }}
          path: build/GTestOutputDir

      # - name: Upload GitHub Pages Artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: build/GTestOutputDir

      # - name: Deploy to GitHub Pages
      #   if: github.ref == 'refs/heads/main'
      #   uses: actions/deploy-pages@v4
